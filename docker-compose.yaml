version: "3.7"

services:
  app:
    container_name: app
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    env_file:
      - .env
    environment:
      GOOSE_DBSTRING: postgresql://${DB_USER}:${DB_PASSWORD}@pg:5432/${DB_NAME}
      GOOSE_DRIVER: ${GOOSE_DRIVER}
      GOOSE_MIGRATION_DIR: ${GOOSE_MIGRATION_DIR}
      TG_BOT_TOKEN: ${TG_BOT_TOKEN}
      CRON_INTERVAL: ${CRON_INTERVAL}
    ports:
      - ${HTTP_PORT}:${HTTP_PORT}
    depends_on:
      pg:
        condition: service_healthy
    networks:
      - local-network
  pg:
    image: postgres:latest
    container_name: pg
    restart: always
    ports:
      - ${DB_PORT}:5432
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - local-network

volumes:
  db_data:

networks:
  local-network:
    driver: bridge
