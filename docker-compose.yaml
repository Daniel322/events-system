version: "3.7"

services:
  api:
    container_name: api
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    env_file:
      - .env
    environment:
      DB_URL: mongodb://${DB_USERNAME}:${DB_PASSWORD}@db:27017/${DB_NAME}?authSource=admin
    command: npm run start:prod
    ports:
      - ${API_PORT}:${API_PORT}
    depends_on:
      db:
        condition: service_healthy
    networks:
      - local-network
  db:
    image: mongo:latest
    container_name: db
    restart: always
    ports:
      - ${DB_PORT}:27017
    environment:
      MONGO_INITDB_DATABASE: ${DB_NAME}
      MONGO_INITDB_ROOT_USERNAME: ${DB_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${DB_PASSWORD}
    volumes:
      - mongodb_data:/data/db
    healthcheck:
      test: |
        mongosh --quiet --eval "db.runCommand('ping').ok" 
        if [ $$? -eq 0 ]; then exit 0; else exit 1; fi
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 10s
    networks:
      - local-network

volumes:
  mongodb_data:

networks:
  local-network:
    driver: bridge
